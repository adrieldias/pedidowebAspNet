@model IEnumerable<PedidoWeb.Models.Usuario>

@{
    ViewBag.Title = "Index";
}

@using (Html.BeginForm("Index", "Pedido", FormMethod.Get))
{
    <div class="input-group" style="padding-left: 0px; padding-right: 0px">
        @Html.TextBox("Search", null, new
            {
                onchange = "$(this.form).submit();",
                placeholder = "Pesquisar por login de usuário",
                @class = "form-control"
            })
        <span class="input-group-btn">
            <button class="btn btn-default" type="button">
                Pesquisar
            </button>
        </span>
    </div>
}

<br />
<div class="principal1coluna">

    <h2>Usuários</h2>
    
    <p>
        @Html.ActionLink("Novo Usuário", "Create", null, new { @class = "btn btn-primary" })
    </p>
    <br />
    <table class="table table-responsive">
        <tr class="cabecalho-tabela">
            <th>
                @Html.DisplayNameFor(model => model.Login)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TipoUsuario)
            </th>
            <th>
                @Html.Label("Vendedor")
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Login)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TipoUsuario)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Vendedor.Nome)
                </td>
                <td>
                    @Html.ActionLink("Detalhar", "Details", new { id = item.UsuarioID }, new { @class="btn btn-info" }) 
                    @Html.ActionLink("Editar", "Edit", new { id = item.UsuarioID }, new { @class = "btn btn-primary" })                    
                    @Html.ActionLink("Excluir", "Delete", new { id = item.UsuarioID }, new { @class = "btn btn-danger" })
                </td>
            </tr>
        }

    </table>
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
    <br />
</div>
