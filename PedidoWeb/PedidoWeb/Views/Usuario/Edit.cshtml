@model PedidoWeb.Models.Usuario

@{
    ViewBag.Title = "Edit";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="principal1coluna">

        @if (ViewBag.Message != null)
        {
            <div class="alert alert-danger">
                @ViewBag.Message
            </div> 
        }

        <h3>Editar Usuario</h3>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.UsuarioID)       

        <div class="form-group">
            @Html.LabelFor(model => model.CodEmpresa)
            @Html.DropDownList("CodEmpresa", null, new { @class="form-control"})
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email)
            @Html.TextBoxFor(model => model.Email, new { @class = "form-control"})
            @Html.ValidationMessageFor(model => model.Email)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Login)            
            @Html.TextBoxFor(model => model.Login, new { @class = "form-control"})
            @Html.ValidationMessageFor(model => model.Login)            
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Senha)            
            @Html.PasswordFor(model => model.Senha, new{ @class = "form-control"})
            @Html.ValidationMessageFor(model => model.Senha)            
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.TipoUsuario)            
            @Html.TextBoxFor(model => model.TipoUsuario, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TipoUsuario)
            
        </div>
        @if (ViewBag.TipoUsuario == "MASTER")
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Situacao)
                @Html.DropDownListFor(model => model.Situacao, new List<SelectListItem>()
                    {
                        new SelectListItem(){Text="LIBERADO", Value="LIBERADO"}
                        , new SelectListItem(){Text="BLOQUEADO", Value="BLOQUEADO"}
                    }, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Situacao)

            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.TipoConsulta)
            @Html.DropDownList("TipoConsulta",
                new List<SelectListItem>()
                {
                    new SelectListItem(){Text="FILTRAGEM POR PARÂMETRO INFORMADO", Value="FILTRO"}
                    , new SelectListItem(){Text="LISTAGEM", Value="LISTAGEM"}
                }
                , new { @class = "form-control" }
            )
            @Html.ValidationMessageFor(model => model.TipoConsulta)
        </div>

        <div class="form-group">
            @Html.Label("Vendedor")            
            @*@Html.DropDownList("VendedorID", (IEnumerable<SelectListItem>)ViewBag.VendedorID
                , string.Empty, new{ @class = "form-control"})*@
            @Html.DropDownList("VendedorID", null, string.Empty, new { @class="form-control"})
            @Html.ValidationMessageFor(model => model.VendedorID)            
        </div>
        <fieldset>
            <legend>Dados para Envio de Emails</legend>
                <div class="form-group">
                    @Html.LabelFor(model => model.SenhaEmail)
                    @Html.PasswordFor(model => model.SenhaEmail, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SenhaEmail)
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.SMTP)
                    @Html.TextBoxFor(model => model.SMTP, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SMTP)
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.PortaSMTP)
                    @Html.TextBoxFor(model => model.PortaSMTP, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.PortaSMTP)
                </div>
                <div class="form-group">
                    @Html.CheckBoxFor(model => model.SSL)
                    @Html.LabelFor(model => model.SSL)
                    @Html.ValidationMessageFor(model => model.SSL)
                </div>
        </fieldset>    

        <div class="form-group">            
            <input type="submit" value="Salvar" class="btn btn-primary" />
            @if(ViewBag.TipoUsuario == "ADMINISTRADOR" || ViewBag.TipoUsuario == "VENDEDOR")
            {
                @Html.ActionLink("Voltar", "Index", "Pedido", null, new {@class="btn btn-default"})
            }
            else
            { 
                @Html.ActionLink("Voltar", "Index", null, new {@class="btn btn-default"})            
            }
        </div>
        

        @if (ViewBag.TipoUsuario != "MASTER")
        {
            @Html.HiddenFor(model => model.CodEmpresa)
            @Html.HiddenFor(model => model.VendedorID)
            @Html.HiddenFor(model => model.TipoUsuario)
            @Html.HiddenFor(model => model.Situacao)
        }
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")

    <script>
        $(document).ready(
            function () {                
                var tipoUsuario = '@(ViewBag.TipoUsuario)'; 
                if(tipoUsuario === 'MASTER') {
                    $('#CodEmpresa').prop('disabled', false)
                    $('#TipoUsuario').prop('disabled', false)
                    $('#VendedorID').prop('disabled', false)
                }
                else {
                    $('#CodEmpresa').prop('disabled', true)
                    $('#TipoUsuario').prop('disabled', true)
                    $('#VendedorID').prop('disabled', true)
                }
            }
        );

    </script>

}


