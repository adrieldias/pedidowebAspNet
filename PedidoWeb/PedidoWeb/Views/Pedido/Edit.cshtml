@model PedidoWeb.Models.Pedido

@{
    ViewBag.Title = "Editar";
}


@Html.AntiForgeryToken()
    
<div class="principal1coluna">
    <h3>Editar Pedido</h3>
    <hr />
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.PedidoID)
    @Html.HiddenFor(model => model.CodEmpresa)

    <div class="form-group">
        @Html.LabelFor(model => model.VendedorID, "Vendedor")
        @Html.DropDownList("VendedorID", null, new { @readonly = "readonly", @class = "form-control" })
        @Html.ValidationMessageFor(model => model.VendedorID)
    </div>

    @*<div class="form-group">
        * @Html.LabelFor(model => model.CadastroID, "Cliente")
        @Html.DropDownList("CadastroID", null, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.CadastroID)
    </div>*@

    <div class="form-group">
        * @Html.Label("Filial")
        @Html.DropDownList("FilialID", null, string.Empty, new { @class="form-control"})
        <span class="error" style="visibility: hidden">Filial é obrigatória</span>
    </div>

    <div class="form-group">
        * @Html.Label("Cliente")
        @Html.TextBox("CadastroAux", null, string.Empty, new { @class = "form-control" })
        <span class="error" style="visibility: hidden">Cliente é obrigatório</span>
    </div>

    <div class="form-group">
        * @Html.LabelFor(model => model.OperacaoID)
        @Html.DropDownList("OperacaoID", null, new { @Class = "form-control" })
        @Html.ValidationMessageFor(model => model.OperacaoID)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DataEmissao)
        @Html.TextBoxFor(model => model.DataEmissao, "{0:dd/MM/yyyy}", new { @readonly = "readonly", @class = "form-control" })
        @Html.ValidationMessageFor(model => model.DataEmissao)
    </div>

    <div class="form-group">
        * @Html.LabelFor(model => model.PrazoVencimentoID, "Forma de Pagamento")
        @Html.DropDownList("PrazoVencimentoID", null, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.PrazoVencimentoID)
    </div>
    
    <div class="form-group">
        @Html.LabelFor(model => model.Status)
        @Html.TextBoxFor(model => model.Status, new { @readonly = "readonly", @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Status)
    </div>       
    <br />
    <button type="button" style="min-width:160px" id="btOpcionais" class="btn btn-default btn-sm" onclick="toggleDiv('opcionais')">
        <span id="testeglyph1" class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
        <span id="testeglyph2" class="glyphicon glyphicon-chevron-down" aria-hidden="true"></span>    
        Mais Informações
    </button>


    <div id="opcionais" class="opcionais" style="display: none">

        <div>
            @Html.Label("Número (opcional)")
            @Html.TextBox("NumeroPedido", null, new { @class = "form-control" })
            <span class="error" style="visibility: hidden">Número inválido</span>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TransportadorID, "Transportador (opcional)")
            @Html.DropDownList("TransportadorID", null, string.Empty, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TransportadorID)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TipoFrete, "Tipo de Frete (opcional)")
            @Html.DropDownListFor(model => model.TipoFrete,
        new List<SelectListItem>() {
            new SelectListItem(){Text="", Value=""},
            new SelectListItem(){Text="CIF", Value="CIF"},
            new SelectListItem(){Text="FOB", Value="FOB" }}, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TipoFrete)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrdemCompra, "Ordem de Compra (opcional)")
            @Html.TextBoxFor(model => model.OrdemCompra, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.OrdemCompra)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Observacao, "Observação (opcional)")
            @Html.TextAreaFor(model => model.Observacao, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Observacao)
        </div>
    </div>
    
    <br />
    <div class="details">
        <h2>Itens do Pedido</h2>
        <hr />
        <br />

        <div id="MsgAddItem" class="alert alert-success">
            <p>Item adicionado com sucesso. Você pode adicionar mais itens ao pedido.</p>
        </div>

        @*@{AjaxOptions ajaxOptions = new AjaxOptions()
            {
                UpdateTargetId = "ValorUnitario",
                OnSuccess = "SuccessRequest",
                OnFailure = "FailureRequest",
                HttpMethod = "POST"
            };
            }

            @using (Ajax.BeginForm("ValorUnitario", "Pedido", ajaxOptions))
            {
                <div class="form-group">
                    * @Html.Label("Produto")
                    @Html.DropDownList("ProdutoID", null, string.Empty, new { @class = "form-control", onchange = "buscaValor()" })
                    <span class="error" style="visibility: hidden">Produto é obrigatório</span>
                </div>

                <script type="text/javascript">
                    function buscaValor() {
                        $("#ProdutoID").submit();
                    }

                    function SuccessRequest(response) {
                        //alert(response);
                        $('#ValorUnitario').val(response);
                    }

                    function FailureRequest(response) {
                        alert("Não foi possível buscar o preço do produto");
                    }
                </script>
            }*@

        <div class="form-group">
            @Html.Label("* Produto")
            @Html.TextBox("ProdutoAux", null, string.Empty, new { @class = "form-control" })
            <span class="error" style="visibility: hidden">Produto é obrigatório</span>
        </div>

        <div class="form-group">
            * @Html.Label("Quantidade")
            <input type="text" id="Quantidade" class="form-control" />
            <span class="error" style="visibility: hidden">Quantidade é obrigatória</span>
        </div>

        <div class="form-group">
            * @Html.Label("Valor Unitário")
            <input type="text" id="ValorUnitario" name="ValorUnitario" class="form-control" />
            <span class="error" style="visibility: hidden">Valor Unitário é obrigatório</span>
        </div>

        <div class="form-group col-md-5" style="padding: 0 0 0 0">
            @Html.Label("Percentual de Desconto")
            <input type="text" id="PercDesconto" name="PercDesconto" class="form-control" />
            <span class="error" style="visibility: hidden">Percentual de desconto inválido</span>

        </div>
        <div class="form-group col-md-2">

        </div>
        @if (ViewBag.Empresa.CodEmpresa != "BISSOLOTTI")
        {
            <div class="form-group col-md-5" style="padding: 0 0 0 0">
                @Html.Label("Valor de Desconto")
                <input type="text" id="ValorDesconto" name="ValorDesconto" class="form-control" />
                <span class="error" style="visibility: hidden">Valor de desconto inválido</span>
            </div>

            <div class="clearfix"></div>

            <div class="form-group">
                @Html.Label("Observação do Item (opcional)")
                <textarea id="ObservacaoItem" class="form-control"></textarea>
                <span class="error" style="visibility: hidden">Observação não pode ter mais de 30 caracteres</span>
            </div>
        }
        @Html.Hidden("ItemIndex")
        <div class="clearfix"></div>

        <span class="input-group-btn">
            <span class="input-group-btn" style="width:50%">
                <button type="button" id="add" class="btn btn-default btn-group-justified">
                    <span class="glyphicon glyphicon-ok"></span>
                    Salvar Item
                </button>
            </span>
            <span class="input-group-btn" style="width:50%">
                <a type="button" id="del" class="btn btn-warning btn-group-justified">
                    <span class="glyphicon glyphicon-remove"></span>
                    Limpar Campos
                </a>
            </span>
        </span>

        <br />
        <div id="pedidoItens"></div>
        <div id="totalPedido"></div>
        <hr />
        <br />
    </div>

    <span class="input-group-btn">
        <span class="input-group-btn" style="width:50%">
            <button type="button" id="submit" class="btn btn-primary btn-group-justified">
                <span class="glyphicon glyphicon-floppy-disk"></span>
                Salvar Pedido
            </button>
        </span>
        <span class="input-group-btn" style="width:50%">
            <a href="@Url.Action("Index")" class="btn btn-warning btn-group-justified">
                <span class=" glyphicon glyphicon-share-alt"></span>
                Sair sem Salvar
            </a>
        </span>
    </span>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")    
    @Scripts.Render("~/bundles/jqueryui")
        
    <script>
        
        function toggleDiv(divid) {
            var div = document.getElementById(divid);
            var disp = div.style.display;
            div.style.display = disp == 'none' ? 'block' : 'none';
            
            //var glyph = document.getElementById('testeglyph1');
            //var glyph2 = document.getElementById('testeglyph2');            
            
            //glyph.style.display = disp == 'none' ? 'none' : 'block';
            //glyph2.style.display = disp == 'none' ? 'block' : 'none';
            
            //var bt = document.getElementById('btOpcionais');
            
            if (disp == 'none') {                
                //$("#btOpcionais").text('Menos Informações');
                $("#testeglyph2").show();
                $("#testeglyph1").hide();
            }
            if (disp == 'block') {
                //$("#btOpcionais").text('Mais Informações');
                $("#testeglyph2").hide();
                $("#testeglyph1").show();                
            }
        };

        $("document").ready(function () {
            
            var produtoSelecionado = 0;
            var cadastroSelecionado = 0;
            var descProdutoSelecionado = '';

            $('#ProdutoAux').autocomplete({
                source: function (request, response) {
                    // prepare url : for example '/api/artistapi?query=sonu
                    var autocompleteUrl = '/Pedido/ProdutoAutoComplete' + '?term=' + request.term;
                    $.ajax({
                        url: autocompleteUrl,
                        type: 'GET',
                        cache: false,
                        dataType: 'json',
                        success: function (json) {                            
                            var autoc = [];
                            $.each(json, function (id, data) {                                
                                autoc.push({
                                    label: data.Descricao,                                                                   
                                    value: data.ProdutoID,
                                    valor: data.PrecoVarejo
                                });
                            });
                            response(autoc);
                        },
                        error: function (xmlHttpRequest, textStatus, errorThrown) {
                            alert('Erro', textStatus, errorThrown);
                        }
                    });
                },
                minLength: 0,
                select: function (event, ui, json) {                    
                    //alert('you have selected ' + ui.item.label + ' ID: ' + ui.item.value + 'Valor ' + ui.item.valor );
                    $('#ProdutoAux').val(ui.item.label);
                    $('#ValorUnitario').val(ui.item.valor);
                    descProdutoSelecionado = ui.item.label;
                    produtoSelecionado = ui.item.value;                    
                    return false;
                }
            });           

            $('#CadastroAux').autocomplete({
                source: function (request, response) {
                    // prepare url : for example '/api/artistapi?query=sonu
                    var autocompleteUrl = '/Pedido/CadastroAutoComplete' + '?term=' + request.term;
                    $.ajax({
                        url: autocompleteUrl,
                        type: 'GET',
                        cache: false,
                        dataType: 'json',
                        success: function (json) {
                            var autoc = [];
                            $.each(json, function (id, data) {
                                autoc.push({
                                    label: data.Nome,
                                    value: data.CadastroID                                    
                                });
                            });
                            response(autoc);
                        },
                        error: function (xmlHttpRequest, textStatus, errorThrown) {
                            alert('Erro', textStatus, errorThrown);
                        }
                    });
                },
                minLength: 0,
                select: function (event, ui, json) {
                    //alert('you have selected ' + ui.item.label + ' ID: ' + ui.item.value);
                    $('#CadastroAux').val(ui.item.label);
                    cadastroSelecionado = ui.item.value;                    
                    return false;
                }
            });

            $("#VendedorID").prop("disabled", true);
            $("#DataEmissao").prop("disabled", true);
            $("#Status").prop("disabled", true);    
            $('#ValorDesconto').prop('disabled', true);            
            $("#MsgAddItem").hide();
            $("#testeglyph2").hide();

            var valorUnitario = '@(ViewBag.Empresa.AlteraValorUnitario)';
            var percDesconto = '@(ViewBag.Empresa.DescontoInformado)'; 
            
            if(valorUnitario.toString() === 'True')
                $("#ValorUnitario").prop("disabled", false);
            else
                $("#ValorUnitario").prop("disabled", true);
            if(percDesconto.toString() === 'True')
                $("#PercDesconto").prop("disabled", false);
            else
                $("#PercDesconto").prop("disabled", true);
           
            var itens = @Html.Raw(Json.Encode(@Model.Itens));            
            var produtos = @Html.Raw(Json.Encode(@ViewBag.ProdutoID));
            $('#CadastroAux').val('@Model.Cadastro.Nome');
            cadastroSelecionado = '@Model.CadastroID';
            
            for(var i = 0; i < produtos.length; i++)
            {

                for(var j = 0; j < itens.length; j++)
                {
                    if(produtos[i].Value == itens[j].ProdutoID){
                        itens[j].DescProduto = produtos[i].Text;                        
                    }                    
                }                
            }                       

            var pedidoItens = itens;
            var totalPedido = 0;

            var calulaTotal = function()
            {                
                for(var i = 0; i < itens.length; i++)
                {
                    var d = 0;
                    if(!isNaN(Number(String(itens[i].ValorDesconto).replace(',','.'))))
                        d = Number(String(itens[i].ValorDesconto).replace(',','.')) 
                            * Number(String(itens[i].Quantidade).replace(',','.'));                            
                    
                    totalPedido += Number(
                        Number(String(itens[i].Quantidade).replace(',','.')) 
                        * Number(String(itens[i].ValorUnitario).replace(',','.'))
                        - Number(d)
                    );
                }
            };

            GeneratedItemsTable(); 

            // Add desconto change function        
            $('#PercDesconto').change(function () {
                var percDesconto = Number($('#PercDesconto').val().replace(',','.'));
                var valUnitario = Number($('#ValorUnitario').val().replace(',','.'));
                                
                if (isNaN(percDesconto)) {
                    $('#PercDesconto').siblings('span.error').css('visibility', 'visible');
                }
                else {
                    $('#ValorDesconto').val(parseFloat(percDesconto * valUnitario / 100).toFixed(2).replace('.', ','));
                }
            })

            // Add  CancelaItem change function
            $('#del').click(function () {
                $('#ProdutoAux').val('').focus();
                $('#Quantidade').val('');
                $('#ValorUnitario').val('');
                $('#ObservacaoItem').val('');
                $('#PercDesconto').val('');
                $('#ValorDesconto').val('');
                $('#ItemIndex').val('');
            });

            // Add button click function
            $('#add').click(function () {
                // Validações
                var isValidItem = true;
                if ($('#ProdutoAux').val().trim() == '' || produtoSelecionado == 0) {
                    isValidItem = false;
                    $('#ProdutoAux').siblings('span.error').css('visibility', 'visible');
                }
                else {
                    $('#ProdutoAux').siblings('span.error').css('visibility', 'hidden');
                }

                if ($('#Quantidade').val().trim() == '' || isNaN($('#Quantidade').val().trim().replace(',', '.'))) {
                    isValidItem = false;
                    $('#Quantidade').siblings('span.error').css('visibility', 'visible');
                }
                else {
                    $('#Quantidade').siblings('span.error').css('visibility', 'hidden');
                }

                if ($('#ValorUnitario').val().trim() == '' || isNaN($('#ValorUnitario').val().trim().replace(',', '.'))) {
                    isValidItem = false;
                    $('#ValorUnitario').siblings('span.error').css('visibility', 'visible');
                }
                else {
                    $('#ValorUnitario').siblings('span.error').css('visibility', 'hidden');
                }
                if ($('#ObservacaoItem').val() != undefined) {
                    if ($('#ObservacaoItem').val().length > 30) {
                        isValidItem = false;
                        $('#ObservacaoItem').siblings('span.error').css('visibility', 'visible');
                    }
                    else {
                        $('#ObservacaoItem').siblings('span.error').css('visibility', 'hidden');
                    }
                }

                if (isNaN($('#PercDesconto').val().trim().replace(',', '.'))) {
                    isValidItem = false;
                    $('#PercDesconto').siblings('span.error').css('visibility', 'visible');
                } else {
                    $('#PercDesconto').siblings('span.error').css('visibility', 'hidden');
                }

                // Add item to list if valid                
                if (isValidItem) {
                    //var el = document.getElementById('ProdutoID');
                    
                    if($('#ItemIndex').val() == '') //adição de itens
                        pedidoItens.push({
                            //ProdutoID: $('#ProdutoID').val().trim(),
                            ProdutoID: produtoSelecionado,
                            Quantidade: $('#Quantidade').val().trim().replace('.',','),
                            ValorUnitario: $('#ValorUnitario').val().trim().replace('.',','),
                            Observacao: $('#ObservacaoItem').val() == undefined ? '' : $('#ObservacaoItem').val().trim(),
                            //DescProduto: el.options[el.selectedIndex].text,
                            DescProduto: descProdutoSelecionado,
                            ValorDesconto: $('#ValorDesconto').val() == undefined ? '' : $('#ValorDesconto').val().trim().replace('.',','),
                            PercentualDesconto: $('#PercDesconto').val().trim().replace('.',',')
                        });
                    else //edição de itens
                    {
                        var i = $('#ItemIndex').val();
                        pedidoItens[i].ProdutoID = produtoSelecionado;
                        pedidoItens[i].Quantidade = $('#Quantidade').val().trim().replace('.',',');
                        pedidoItens[i].ValorUnitario = $('#ValorUnitario').val().trim().replace('.',',');
                        pedidoItens[i].Observacao = $('#ObservacaoItem').val() == undefined ? '' : $('#ObservacaoItem').val().trim();
                        pedidoItens[i].DescProduto = descProdutoSelecionado;
                        pedidoItens[i].ValorDesconto = $('#ValorDesconto').val() == undefined ? '' : $('#ValorDesconto').val().trim().replace('.',',');
                        pedidoItens[i].PercentualDesconto = $('#PercDesconto').val().trim().replace('.',',');
                    }

                    $('#ProdutoAux').val('').focus();
                    $('#Quantidade').val('');
                    $('#ValorUnitario').val('');
                    $('#ObservacaoItem').val('');
                    $('#PercDesconto').val('');
                    $('#ValorDesconto').val('');
                    $('#ItemIndex').val('');
                    produtoSelecionado = 0;
                    $("#MsgAddItem").show();                    
                    setTimeout("$('#MsgAddItem').hide()", 3500);
                }
                GeneratedItemsTable();

            });

            // Save button click function
            $('#submit').click(function () {

                // Validação do pedido
                var isValidOrder = true;

                if ($('#CadastroAux').val().trim() == '' || cadastroSelecionado == 0) {
                    isValidOrder = false;
                    $('#CadastroAux').siblings('span.error').css('visibility', 'visible');
                    $('#CadastroAux').focus();
                }
                else {
                    $('#CadastroAux').siblings('span.error').css('visibility', 'hidden');
                }

                if($('#FilialID').val().trim() == '')
                {
                    isValidOrder = false;
                    $('#FilialID').siblings('span.error').css('visibility','visible');
                }
                else {
                    $('#FilialID').siblings('span.error').css('visibility', 'hidden');
                }

                if ($('#PrazoVencimentoID').val().trim() == '') {
                    isValidOrder = false;
                    $('#PrazoVencimentoID').siblings('span.error').css('visibility', 'visible');
                }
                else {
                    $('#PrazoVencimentoID').siblings('span.error').css('visibility', 'hidden');
                }

                if(isNaN($('#NumeroPedido').val().trim())) {
                    isValidOrder = false;
                    $('#NumeroPedido').siblings('span.error').css('visibility', 'visible');
                    $('#NumeroPedido').focus();
                } else {
                    $('#NumeroPedido').siblings('span.error').css('visibility', 'hidden');
                }

                if ($('#OperacaoID').val().trim() == '') {
                    isValidOrder = false;
                    $('#OperacaoID').siblings('span.error').css('visibility', 'visible');                    
                } else {
                    $('#OperacaoID').siblings('span.error').css('visibility', 'hidden');
                }

                // Salvar
                if (isValidOrder) {
                    var data = {
                        PedidoID: $('#PedidoID').val().trim(),
                        //CadastroID: $('#CadastroID').val().trim(),
                        CadastroID: cadastroSelecionado,
                        PrazoVencimentoID: $('#PrazoVencimentoID').val().trim(),
                        VendedorID: $('#VendedorID').val().trim(),
                        TransportadorID: $('#TransportadorID').val().trim(),
                        TipoFrete: $('#TipoFrete').val().trim(),
                        OrdemCompra: $('#OrdemCompra').val().trim(),
                        Observacao: $('#Observacao').val().trim(),
                        DataEmissao: $('#DataEmissao').val().trim(),
                        CodEmpresa: $('#CodEmpresa').val().trim(),
                        Status: $('#Status').val().trim(),
                        NumeroPedido : $('#NumeroPedido').val().trim(),
                        OperacaoID : $('#OperacaoID').val().trim(),
                        CodEmpresa: '@(ViewBag.Empresa.CodEmpresa)',
                        FilialID: $('#FilialID').val().trim(),
                        Itens: pedidoItens
                    }
                    cadastroSelecionado = 0;
                    $(this).val('Por favor aguarde...');

                    $.ajax({
                        url: '/Pedido/SalvaPedido',
                        type: 'POST',
                        data: JSON.stringify(data),
                        datatype: "JSON",
                        contentType: "application/json",
                        success: function (d) {
                            // Checa se o pedido foi salvo no banco de dados
                            if (d.status == true) {
                                window.location.href = '/Pedido/Index';
                            }
                            else {
                                alert(d.errorMessage);
                            }

                        },
                        error: function () {
                            alert('Erro ao salvar pedido. Por favor tente novamente.');
                        }
                    })
                }
            })


            // Function for show added items in table
            function GeneratedItemsTable() {
                if (pedidoItens.length > 0) {
                    var $div = $('<div class="table-responsive"></div>');
                    var $table = $('<table class="table table-responsive table-striped"></table>');
                    $table.append('<thead><tr><th>Produto</th><th></th><th>Quantidade</th><th>Desconto Unitário</th><th>Valor Unitário</th><th></th></tr></thead>');
                    var $tbody = $('<tbody />');
                    $.each(pedidoItens, function (i, val) {
                        var $row = $('<tr/>');
                        $row.append($('<td/>').html(val.ProdutoID));
                        $row.append($('<td/>').html(val.DescProduto));
                        $row.append($('<td/>').html(val.Quantidade));            
                        if (val.ValorDesconto == null || val.ValorDesconto == '')
                            $row.append($('<td/>').html('0.00'));
                        else
                            $row.append($('<td/>').html(parseFloat(val.ValorDesconto).toFixed(2)));
                        $row.append($('<td/>').html(val.ValorUnitario));  
                        $row.append($('<td style="text-align:right;padding-top:0px"><button id=editarItem class="btn btn-primary btn-sm">'+
                            '<span class="glyphicon glyphicon-pencil" aria-hidden="true">'+
                            '</span></button>').click(function(){                            
                                $('#ProdutoAux').val(val.DescProduto).focus();
                                $('#Quantidade').val(val.Quantidade);
                                $('#ValorUnitario').val(val.ValorUnitario);
                                $('#ObservacaoItem').val(val.Observacao);
                                $('#PercDesconto').val(val.percDesconto);
                                $('#ValorDesconto').val(val.ValorDesconto);
                                $('#ItemIndex').val(i);
                                produtoSelecionado = val.ProdutoID;
                                descProdutoSelecionado = val.DescProduto;
                            }));
                        $row.append($('<button id=excluir class="btn btn-danger btn-sm" style="margin-top:1px">'+
                            '<span class="glyphicon glyphicon-remove" aria-hidden="true">'+
                            '</span></button></td>').click(function(){
                                pedidoItens.splice(i, 1);                                    
                                GeneratedItemsTable();
                            }));
                        $tbody.append($row);
                    });
                    $table.append($tbody);
                    $div.append($table);
                    $('#pedidoItens').html($div);
                }
                else{
                    $('#pedidoItens').html('');
                }

                calulaTotal();

                if (isNaN(totalPedido)) {
                    $('#totalPedido').html(
                        '<p class="label label-default">'
                        + 'Total do Pedido R$: 0.00'
                        + '</p>'
                        );
                    
                } else {
                    $('#totalPedido').html(
                        '<p class="label label-default">'
                        + 'Total do Pedido R$: '
                        + parseFloat(totalPedido).toFixed(2)
                        + '</p>'
                        );
                }

                totalPedido = 0;
            }
        });

    </script>
}
